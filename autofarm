local Debug = false
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9)
local Balls = workspace:WaitForChild("Balls", 9e9)

-- Create the visual cube
local cube = Instance.new("Part")
cube.Anchored = true
cube.Size = Vector3.new(5, 5, 5)
cube.BrickColor = BrickColor.new("Bright red")
cube.Transparency = 0.5
cube.CanCollide = false
cube.Parent = workspace

-- Functions
local function print(...)
    if Debug then
        warn(...)
    end
end

local function VerifyBall(Ball)
    if typeof(Ball) == "Instance" and Ball:IsA("BasePart") and Ball:IsDescendantOf(Balls) and Ball:GetAttribute("realBall") == true then
        return true
    end
end

local function IsTarget()
    return (Player.Character and Player.Character:FindFirstChild("Highlight"))
end

local function Parry()
    Remotes:WaitForChild("ParryButtonPress"):Fire()
end

-- The actual code
Balls.ChildAdded:Connect(function(Ball)
    if not VerifyBall(Ball) then
        return
    end

    print("Ball Spawned:", Ball.Name)

    local OldPosition = Ball.Position
    local OldTick = tick()

    Ball:GetPropertyChangedSignal("Position"):Connect(function()
        if IsTarget() then
            local Distance = (Ball.Position - workspace.CurrentCamera.Focus.Position).Magnitude
            local Velocity = (OldPosition - Ball.Position).Magnitude

            print("Distance:", Distance)
            print("Velocity:", Velocity)
            print("Time:", Distance / Velocity)

            if (Distance / Velocity) <= 10 then
                Parry()
                
                -- Create the visual cube at the ball's position for 1 second
                cube.Position = Ball.Position
                wait(1)
                cube.Position = Vector3.new(0, 0, 0) -- Move the cube away
            end
        end

        if (tick() - OldTick >= 1/60) then
            OldTick = tick()
            OldPosition = Ball.Position
        end
    end)
end)
